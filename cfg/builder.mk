BUILDER_ARGS = arch="$(ARCH)" \
theseus-root="$(ROOT_DIR)" \
build-dir="$(BUILD_DIR)" \
output-iso="$(iso)" \
linker="$(CROSS)ld" \
stripper="strip" \
target-name="$(TARGET)" \
build-mode="$(BUILD_MODE)" \
prefixes.kernel="$(KERNEL_PREFIX)" \
prefixes.applications="$(APP_PREFIX)" \
prefixes.executables="$(EXECUTABLE_PREFIX)" \
directories.cfg="$(CFG_DIR)" \
directories.nanocore="$(NANO_CORE_BUILD_DIR)" \
directories.isofiles="$(ISOFILES)" \
directories.modules="$(OBJECT_FILES_BUILD_DIR)" \
directories.deps="$(DEPS_BUILD_DIR)" \
directories.target="{theseus-root}/target" \
directories.debug-symbols="$(DEBUG_SYMBOLS_DIR)" \
directories.target-deps="$(TARGET_DEPS_DIR)" \
link-nanocore.static-lib-path="$(nano_core_static_lib)" \
link-nanocore.asm-sources-dir="$(NANO_CORE_SRC_DIR)/boot/arch_{arch}" \
link-nanocore.linker-script-path="$(linker_script)" \
serialize-nanocore-syms.output-path="$(OBJECT_FILES_BUILD_DIR)/$(KERNEL_PREFIX)nano_core.serde" \
serialize-nanocore-syms.readelf="$(CROSS)readelf" \
relink-objects.partial-relinking-script="$(partial_relinking_script)" \
add-bootloader.bootloader="$(bootloader)" \
add-bootloader.grub-mkrescue="$(GRUB_MKRESCUE)" \
copy-crate-objects.extra-apps=[ $(EXTRA_APP_CRATE_NAMES) ]
