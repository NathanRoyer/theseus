arch = "{env:ARCH}"
theseus-root = "{env:ROOT_DIR}"
build-dir = "{env:BUILD_DIR}"
discover = []
output-iso = "{env:iso}"
linker = "{env:CROSS}ld"
stripper = "strip"
target-name = "{env:TARGET}"
target = "{directories.cfg}/{target-name}.json"
build-mode = "{env:BUILD_MODE}"
nanocore-bin = "nano_core-{arch}.bin"
nanocore-path = "{directories.nanocore}/{nanocore-bin}"

[prefixes]
kernel = "{env:KERNEL_PREFIX}"
applications = "{env:APP_PREFIX}"
executables = "{env:EXECUTABLE_PREFIX}"

[directories]
cfg = "{env:CFG_DIR}"
nanocore = "{env:NANO_CORE_BUILD_DIR}"
isofiles = "{env:ISOFILES}"
modules = "{env:OBJECT_FILES_BUILD_DIR}"
deps = "{env:DEPS_BUILD_DIR}"
target = "{theseus-root}/target"
extracted-rlibs = "{build-dir}/extracted_rlibs"
debug-symbols = "{env:DEBUG_SYMBOLS_DIR}"
sysroot = "{directories.deps}/sysroot/lib/rustlib/{target-name}/lib"
target-deps = "{env:TARGET_DEPS_DIR}"

[link-nanocore]
static-lib-path = "{env:nano_core_static_lib}"
asm-sources-dir = "{env:NANO_CORE_SRC_DIR}/boot/arch_{arch}"
linker-script-path = "{env:linker_script}"

[serialize-nanocore-syms]
output-path = "{env:OBJECT_FILES_BUILD_DIR}/{env:KERNEL_PREFIX}nano_core.serde"
readelf = "{env:CROSS}readelf"

[copy-crate-objects]
extra-apps = { from-env = "EXTRA_APP_CRATE_NAMES", delimiter = " " }

[relink-objects]
partial-relinking-script = "{env:partial_relinking_script}"

[add-bootloader]
bootloader = "{env:bootloader}"
grub-mkrescue = "{env:GRUB_MKRESCUE}"
